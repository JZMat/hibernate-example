<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AnalysisUIOptions">
    <option name="ANALYZE_INJECTED_CODE" value="false" />
  </component>
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="40d501b5-6627-4245-a69c-ff039073fe83" name="Changes" comment="Add option to transfer money between accounts&#10;&#10;Updated the BankAccountMenu to include an option for transferring money between accounts. This was achieved by adding a new menu option in the displayMenu method and handling the option in the handleUserInput method. A new method, transferMoneyBetweenAccounts, was implemented to ask the user for the necessary information, perform the transfer, and save the updated account balances using the BankAccountService.">
      <change afterPath="$PROJECT_DIR$/src/main/java/com/example/model/Transaction.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/com/example/repository/TransactionRepository.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/com/example/repository/TransactionRepositoryImpl.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/com/example/service/TransactionService.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/com/example/service/TransactionServiceImpl.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/com/example/ui/BankAccountUtils.java" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/src/main/java/com/example/ui/TransactionHistoryMenu.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/Application.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/Application.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/model/BankAccount.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/model/BankAccount.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/ui/BankAccountMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/ui/BankAccountMenu.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/ui/MainMenu.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/ui/MainMenu.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/java/com/example/ui/MenuConstants.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/com/example/ui/MenuConstants.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/main/resources/hibernate.cfg.xml" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/resources/hibernate.cfg.xml" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Interface" />
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="GitHubPullRequestSearchHistory">{
  &quot;lastFilter&quot;: {
    &quot;state&quot;: &quot;OPEN&quot;,
    &quot;assignee&quot;: &quot;JZMat&quot;
  }
}</component>
  <component name="GithubPullRequestsUISettings">{
  &quot;selectedUrlAndAccountId&quot;: {
    &quot;url&quot;: &quot;https://github.com/JZMat/hibernate-example&quot;,
    &quot;accountId&quot;: &quot;ea92ddda-9767-4f4d-a59b-e880f198c298&quot;
  }
}</component>
  <component name="ProblemsViewState">
    <option name="selectedTabId" value="CurrentFile" />
  </component>
  <component name="ProjectColorInfo">{
  &quot;associatedIndex&quot;: 6
}</component>
  <component name="ProjectId" id="2g3NRskkSVesiohE8vy8AVW8GRV" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="2" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent">{
  &quot;keyToString&quot;: {
    &quot;ASKED_ADD_EXTERNAL_FILES&quot;: &quot;true&quot;,
    &quot;Application.Application.executor&quot;: &quot;Run&quot;,
    &quot;Application.Main.executor&quot;: &quot;Run&quot;,
    &quot;Application.Test.executor&quot;: &quot;Run&quot;,
    &quot;Application.com.example.Main.executor&quot;: &quot;Run&quot;,
    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
    &quot;run.code.analysis.last.selected.profile&quot;: &quot;pProject Default&quot;,
    &quot;settings.editor.selected.configurable&quot;: &quot;reference.projectsettings.compiler.annotationProcessors&quot;
  }
}</component>
  <component name="RecentsManager">
    <key name="CreateClassDialog.RecentsKey">
      <recent name="com.example.repository" />
    </key>
    <key name="MoveMembersDialog.RECENTS_KEY">
      <recent name="com.example.ui.BankAccountUtils" />
      <recent name="com.example.ui.MenuConstants" />
    </key>
  </component>
  <component name="RunManager" selected="Application.Application">
    <configuration name="Application" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.example.Application" />
      <module name="hibernate-example" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="Main" />
      <module name="hibernate-example" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="Test" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.example.test.Test" />
      <module name="hibernate-example" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.example.test.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="com.example.Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
      <option name="MAIN_CLASS_NAME" value="com.example.Main" />
      <module name="hibernate-example" />
      <extension name="coverage">
        <pattern>
          <option name="PATTERN" value="com.example.*" />
          <option name="ENABLED" value="true" />
        </pattern>
      </extension>
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Application.Application" />
        <item itemvalue="Application.Test" />
        <item itemvalue="Application.com.example.Main" />
        <item itemvalue="Application.Main" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="40d501b5-6627-4245-a69c-ff039073fe83" name="Changes" comment="" />
      <created>1714922298332</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1714922298332</updated>
    </task>
    <task id="LOCAL-00001" summary="Initial commit">
      <option name="closed" value="true" />
      <created>1714925515654</created>
      <option name="number" value="00001" />
      <option name="presentableId" value="LOCAL-00001" />
      <option name="project" value="LOCAL" />
      <updated>1714925515654</updated>
    </task>
    <task id="LOCAL-00002" summary="Initial commit">
      <option name="closed" value="true" />
      <created>1714925657593</created>
      <option name="number" value="00002" />
      <option name="presentableId" value="LOCAL-00002" />
      <option name="project" value="LOCAL" />
      <updated>1714925657593</updated>
    </task>
    <task id="LOCAL-00003" summary="This version allows to &quot;Create a new bank&quot; and &quot;View all banks&quot;.">
      <option name="closed" value="true" />
      <created>1714990394059</created>
      <option name="number" value="00003" />
      <option name="presentableId" value="LOCAL-00003" />
      <option name="project" value="LOCAL" />
      <updated>1714990394059</updated>
    </task>
    <task id="LOCAL-00004" summary="This version also allows to &quot;Create a new owner&quot;.">
      <option name="closed" value="true" />
      <created>1714995455776</created>
      <option name="number" value="00004" />
      <option name="presentableId" value="LOCAL-00004" />
      <option name="project" value="LOCAL" />
      <updated>1714995455776</updated>
    </task>
    <task id="LOCAL-00005" summary="This version does not work if one try to associate a BankAccount to a user.">
      <option name="closed" value="true" />
      <created>1715090309680</created>
      <option name="number" value="00005" />
      <option name="presentableId" value="LOCAL-00005" />
      <option name="project" value="LOCAL" />
      <updated>1715090309680</updated>
    </task>
    <task id="LOCAL-00006" summary="This version allows you to link a bank account to a user, but it is not a smart version. It's hard to guess which account belongs to whom when people have a separate account with the same name at the same bank.">
      <option name="closed" value="true" />
      <created>1715094091359</created>
      <option name="number" value="00006" />
      <option name="presentableId" value="LOCAL-00006" />
      <option name="project" value="LOCAL" />
      <updated>1715094091359</updated>
    </task>
    <task id="LOCAL-00007" summary="Deposit funds into an account function has been implemented.">
      <option name="closed" value="true" />
      <created>1715098459671</created>
      <option name="number" value="00007" />
      <option name="presentableId" value="LOCAL-00007" />
      <option name="project" value="LOCAL" />
      <updated>1715098459671</updated>
    </task>
    <task id="LOCAL-00008" summary="'Deposit funds into an account' function has been modified.&#10;String input = scanner.nextLine().trim().replace(&quot;&quot;,&quot;, &quot;&quot;); in 'getBigDecimalInput' method of 'InputUtils' class did not work for entering string with the comma separator instead of the dot one. For instance input '5,00' was not added as '500'.&#10;&#10;This is why I split this line of code into two lines, i.e.&#10;String input = scanner.nextLine();&#10;input = input.trim().replace(&quot;,&quot;, &quot;&quot;);&#10;&#10;Next I have changed &quot;&quot; into &quot;.&quot; i.e. 'replace(&quot;,&quot;, &quot;&quot;)' to get '5,00' interpreted as '5.00'.&#10;&#10;After replacement took place it was possible to keep the code concise, but I have not returned into 'String input = scanner.nextLine().trim().replace(&quot;,&quot;, &quot;.&quot;);'.">
      <option name="closed" value="true" />
      <created>1715172516983</created>
      <option name="number" value="00008" />
      <option name="presentableId" value="LOCAL-00008" />
      <option name="project" value="LOCAL" />
      <updated>1715172516983</updated>
    </task>
    <task id="LOCAL-00009" summary="This version prints all detail for bank accounts:&#10;List of all bank accounts:&#10;Index, Account Name, Amount, Bank Name, Owners.">
      <option name="closed" value="true" />
      <created>1715180102798</created>
      <option name="number" value="00009" />
      <option name="presentableId" value="LOCAL-00009" />
      <option name="project" value="LOCAL" />
      <updated>1715180102798</updated>
    </task>
    <task id="LOCAL-00010" summary="This version prints all detail for bank accounts:&#10;List of all bank accounts:&#10;Index, Account Name, Amount, Bank Name, Owners.">
      <option name="closed" value="true" />
      <created>1715239283730</created>
      <option name="number" value="00010" />
      <option name="presentableId" value="LOCAL-00010" />
      <option name="project" value="LOCAL" />
      <updated>1715239283730</updated>
    </task>
    <task id="LOCAL-00011" summary="This version dynamically adjust the width of the Account Name, Amount, Bank Name columns in 'formatBankAccount' method based on the longest: account name length, balance length and bank name length in the bank accounts.">
      <option name="closed" value="true" />
      <created>1715249141250</created>
      <option name="number" value="00011" />
      <option name="presentableId" value="LOCAL-00011" />
      <option name="project" value="LOCAL" />
      <updated>1715249141250</updated>
    </task>
    <task id="LOCAL-00012" summary="This version dynamically adjust the width of the Owners column.">
      <option name="closed" value="true" />
      <created>1715258387743</created>
      <option name="number" value="00012" />
      <option name="presentableId" value="LOCAL-00012" />
      <option name="project" value="LOCAL" />
      <updated>1715258387743</updated>
    </task>
    <task id="LOCAL-00013" summary="'getValidatedInput' method created in 'InputUtil' class to validate user input.">
      <option name="closed" value="true" />
      <created>1715282425999</created>
      <option name="number" value="00013" />
      <option name="presentableId" value="LOCAL-00013" />
      <option name="project" value="LOCAL" />
      <updated>1715282425999</updated>
    </task>
    <task id="LOCAL-00014" summary="Implemented 'com.example.util.StringUtils' class with a generic method 'findLongestStringLength'. This method is used in the 'com.example.ui.BankAccountMenu' class to get 'longestAccountNameLength', 'longestBankNameLength', and 'longestBalanceLength'.">
      <option name="closed" value="true" />
      <created>1715328147826</created>
      <option name="number" value="00014" />
      <option name="presentableId" value="LOCAL-00014" />
      <option name="project" value="LOCAL" />
      <updated>1715328147826</updated>
    </task>
    <task id="LOCAL-00015" summary="The issue has been resolved that the longestOwnersNamesLength can be zero if there are no owners assigned to any bank account. In this case the length is as long as the header name “Owners”. &#10;Math.max has been used for all headers:&#10;Math.max(..., &quot;Account&quot;.length());&#10;Math.max(..., &quot;Bank&quot;.length());">
      <option name="closed" value="true" />
      <created>1715350254924</created>
      <option name="number" value="00015" />
      <option name="presentableId" value="LOCAL-00015" />
      <option name="project" value="LOCAL" />
      <updated>1715350254924</updated>
    </task>
    <task id="LOCAL-00016" summary=" Added a new option to the main menu for viewing balance sheets.">
      <option name="closed" value="true" />
      <created>1715360418942</created>
      <option name="number" value="00016" />
      <option name="presentableId" value="LOCAL-00016" />
      <option name="project" value="LOCAL" />
      <updated>1715360418942</updated>
    </task>
    <task id="LOCAL-00017" summary="Balances for accounts with multiple owners are treated as a separate entity and are not included in the individual owner's balance.">
      <option name="closed" value="true" />
      <created>1715366898560</created>
      <option name="number" value="00017" />
      <option name="presentableId" value="LOCAL-00017" />
      <option name="project" value="LOCAL" />
      <updated>1715366898560</updated>
    </task>
    <task id="LOCAL-00018" summary="Saving the program code before implementing the patch to:&#10;Redundancy in getOwnersAsString: You append a comma and a space to the string ownerNames constructor, then remove the last two characters. Instead, you can use a StringJoiner with a &quot;,&quot; delimiter to avoid having to remove the last two characters.">
      <option name="closed" value="true" />
      <created>1715415897023</created>
      <option name="number" value="00018" />
      <option name="presentableId" value="LOCAL-00018" />
      <option name="project" value="LOCAL" />
      <updated>1715415897023</updated>
    </task>
    <task id="LOCAL-00019" summary="In this modification, I’ve replaced the StringBuilder with a StringJoiner that uses a comma and a space as the delimiter. This way, one don’t need to remove the last two characters after the loop. The StringJoiner will only add the delimiter between elements, not at the end. This should make this code more efficient and easier to read.">
      <option name="closed" value="true" />
      <created>1715416824762</created>
      <option name="number" value="00019" />
      <option name="presentableId" value="LOCAL-00019" />
      <option name="project" value="LOCAL" />
      <updated>1715416824762</updated>
    </task>
    <task id="LOCAL-00020" summary="Some small changes to get code more readable.">
      <option name="closed" value="true" />
      <created>1715432147350</created>
      <option name="number" value="00020" />
      <option name="presentableId" value="LOCAL-00020" />
      <option name="project" value="LOCAL" />
      <updated>1715432147350</updated>
    </task>
    <task id="LOCAL-00021" summary="findLongestStringLength helper method that calculates the maximum length of a list of strings was created. This method takes a list of strings as input and return the length of the longest string. This method can then be used to calculate the maximum length of each column in displayFormattedBankAccounts method.">
      <option name="closed" value="true" />
      <created>1715435273522</created>
      <option name="number" value="00021" />
      <option name="presentableId" value="LOCAL-00021" />
      <option name="project" value="LOCAL" />
      <updated>1715435273522</updated>
    </task>
    <task id="LOCAL-00022" summary="Updated the balance display in the Balance Sheet Menu to align decimal digits in the same column. This was achieved by using the String.format() method to control the width of the printed fields. The account information is now left-justified and the balance is right-justified, which makes the output more readable and professional.">
      <option name="closed" value="true" />
      <created>1715436831305</created>
      <option name="number" value="00022" />
      <option name="presentableId" value="LOCAL-00022" />
      <option name="project" value="LOCAL" />
      <updated>1715436831305</updated>
    </task>
    <task id="LOCAL-00023" summary="Updated the Balance Sheet Menu to include the total balance after printing the report for option 4. This was achieved by adding up the balances of each account, and then printing the total balance at the end.">
      <option name="closed" value="true" />
      <created>1715438865130</created>
      <option name="number" value="00023" />
      <option name="presentableId" value="LOCAL-00023" />
      <option name="project" value="LOCAL" />
      <updated>1715438865130</updated>
    </task>
    <task id="LOCAL-00024" summary="Summary: &#10;&#10;1) Implement disconnect owner from bank account feature.&#10;&#10;Details:&#10;- Added a new option in the 'Bank Account Management Menu' to disconnect an owner from a bank account.&#10;- Created a new method `disconnectOwnerFromBankAccount()` in `BankAccountMenu` class to handle the disconnection.&#10;- Modified `handleUserInput()` method in `BankAccountMenu` class to handle the new menu option.&#10;- Added a new method `removeOwner()` in `BankAccount` class to remove an owner from the owners set.&#10;&#10;2) Add 'Create PDF' option to 'Balance Sheet Menu' &#10;&#10;Details:&#10;- Added a new option in the 'Balance Sheet Menu' for creating a PDF version of the balance sheet.&#10;- Implemented a new method `createPDF()` in `BalanceSheetMenu` class to handle the PDF creation.&#10;- Modified `handleUserInput()` method in `BalanceSheetMenu` class to handle the new menu option.&#10;- Utilized a PDF library iText for generating the PDF.&#10;- The new feature allows users to generate a PDF of the balance sheet directly from the menu..">
      <option name="closed" value="true" />
      <created>1715516279861</created>
      <option name="number" value="00024" />
      <option name="presentableId" value="LOCAL-00024" />
      <option name="project" value="LOCAL" />
      <updated>1715516279861</updated>
    </task>
    <task id="LOCAL-00025" summary="Add option to transfer money between accounts&#10;&#10;Updated the BankAccountMenu to include an option for transferring money between accounts. This was achieved by adding a new menu option in the displayMenu method and handling the option in the handleUserInput method. A new method, transferMoneyBetweenAccounts, was implemented to ask the user for the necessary information, perform the transfer, and save the updated account balances using the BankAccountService.">
      <option name="closed" value="true" />
      <created>1715517691682</created>
      <option name="number" value="00025" />
      <option name="presentableId" value="LOCAL-00025" />
      <option name="project" value="LOCAL" />
      <updated>1715517691682</updated>
    </task>
    <option name="localTasksCounter" value="26" />
    <servers />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VcsManagerConfiguration">
    <option name="ADD_EXTERNAL_FILES_SILENTLY" value="true" />
    <MESSAGE value="Initial commit" />
    <MESSAGE value="This version allows to &quot;Create a new bank&quot; and &quot;View all banks&quot;." />
    <MESSAGE value="This version also allows to &quot;Create a new owner&quot;." />
    <MESSAGE value="This version does not work if one try to associate a BankAccount to a user." />
    <MESSAGE value="This version allows you to link a bank account to a user, but it is not a smart version. It's hard to guess which account belongs to whom when people have a separate account with the same name at the same bank." />
    <MESSAGE value="Deposit funds into an account function has been implemented." />
    <MESSAGE value="'Deposit funds into an account' function has been modified.&#10;String input = scanner.nextLine().trim().replace(&quot;&quot;,&quot;, &quot;&quot;); in 'getBigDecimalInput' method of 'InputUtils' class did not work for entering string with the comma separator instead of the dot one. For instance input '5,00' was not added as '500'.&#10;&#10;This is why I split this line of code into two lines, i.e.&#10;String input = scanner.nextLine();&#10;input = input.trim().replace(&quot;,&quot;, &quot;&quot;);&#10;&#10;Next I have changed &quot;&quot; into &quot;.&quot; i.e. 'replace(&quot;,&quot;, &quot;&quot;)' to get '5,00' interpreted as '5.00'.&#10;&#10;After replacement took place it was possible to keep the code concise, but I have not returned into 'String input = scanner.nextLine().trim().replace(&quot;,&quot;, &quot;.&quot;);'." />
    <MESSAGE value="This version prints all detail for bank accounts:&#10;List of all bank accounts:&#10;Index, Account Name, Amount, Bank Name, Owners." />
    <MESSAGE value="This version dynamically adjust the width of the Account Name, Amount, Bank Name columns in 'formatBankAccount' method based on the longest: account name length, balance length and bank name length in the bank accounts." />
    <MESSAGE value="This version dynamically adjust the width of the Owners column." />
    <MESSAGE value="'getValidatedInput' method created in 'InputUtil' class to validate user input." />
    <MESSAGE value="Implemented 'com.example.util.StringUtils' class with a generic method 'findLongestStringLength'. This method is used in the 'com.example.ui.BankAccountMenu' class to get 'longestAccountNameLength', 'longestBankNameLength', and 'longestBalanceLength'." />
    <MESSAGE value="The issue has been resolved that the longestOwnersNamesLength can be zero if there are no owners assigned to any bank account. In this case the length is as long as the header name “Owners”. &#10;Math.max has been used for all headers:&#10;Math.max(..., &quot;Account&quot;.length());&#10;Math.max(..., &quot;Bank&quot;.length());" />
    <MESSAGE value=" Added a new option to the main menu for viewing balance sheets." />
    <MESSAGE value="Balances for accounts with multiple owners are treated as a separate entity and are not included in the individual owner's balance." />
    <MESSAGE value="Saving the program code before implementing the patch to:&#10;Redundancy in getOwnersAsString: You append a comma and a space to the string ownerNames constructor, then remove the last two characters. Instead, you can use a StringJoiner with a &quot;,&quot; delimiter to avoid having to remove the last two characters." />
    <MESSAGE value="In this modification, I’ve replaced the StringBuilder with a StringJoiner that uses a comma and a space as the delimiter. This way, one don’t need to remove the last two characters after the loop. The StringJoiner will only add the delimiter between elements, not at the end. This should make this code more efficient and easier to read." />
    <MESSAGE value="Some small changes to get code more readable." />
    <MESSAGE value="findLongestStringLength helper method that calculates the maximum length of a list of strings was created. This method takes a list of strings as input and return the length of the longest string. This method can then be used to calculate the maximum length of each column in displayFormattedBankAccounts method." />
    <MESSAGE value="Updated the balance display in the Balance Sheet Menu to align decimal digits in the same column. This was achieved by using the String.format() method to control the width of the printed fields. The account information is now left-justified and the balance is right-justified, which makes the output more readable and professional." />
    <MESSAGE value="Updated the Balance Sheet Menu to include the total balance after printing the report for option 4. This was achieved by adding up the balances of each account, and then printing the total balance at the end." />
    <MESSAGE value="Summary: &#10;&#10;1) Implement disconnect owner from bank account feature.&#10;&#10;Details:&#10;- Added a new option in the 'Bank Account Management Menu' to disconnect an owner from a bank account.&#10;- Created a new method `disconnectOwnerFromBankAccount()` in `BankAccountMenu` class to handle the disconnection.&#10;- Modified `handleUserInput()` method in `BankAccountMenu` class to handle the new menu option.&#10;- Added a new method `removeOwner()` in `BankAccount` class to remove an owner from the owners set.&#10;&#10;2) Add 'Create PDF' option to 'Balance Sheet Menu' &#10;&#10;Details:&#10;- Added a new option in the 'Balance Sheet Menu' for creating a PDF version of the balance sheet.&#10;- Implemented a new method `createPDF()` in `BalanceSheetMenu` class to handle the PDF creation.&#10;- Modified `handleUserInput()` method in `BalanceSheetMenu` class to handle the new menu option.&#10;- Utilized a PDF library iText for generating the PDF.&#10;- The new feature allows users to generate a PDF of the balance sheet directly from the menu.." />
    <MESSAGE value="Add option to transfer money between accounts&#10;&#10;Updated the BankAccountMenu to include an option for transferring money between accounts. This was achieved by adding a new menu option in the displayMenu method and handling the option in the handleUserInput method. A new method, transferMoneyBetweenAccounts, was implemented to ask the user for the necessary information, perform the transfer, and save the updated account balances using the BankAccountService." />
    <option name="LAST_COMMIT_MESSAGE" value="Add option to transfer money between accounts&#10;&#10;Updated the BankAccountMenu to include an option for transferring money between accounts. This was achieved by adding a new menu option in the displayMenu method and handling the option in the handleUserInput method. A new method, transferMoneyBetweenAccounts, was implemented to ask the user for the necessary information, perform the transfer, and save the updated account balances using the BankAccountService." />
  </component>
</project>